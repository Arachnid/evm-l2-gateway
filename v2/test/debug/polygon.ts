
import { PolygonPoSRollup } from '../../src/polygon/PolygonPoSRollup.js';
import { createProviderPair, providerURL } from '../providers.js';
import { Gateway } from '../../src/gateway.js';
import { serve } from '@resolverworks/ezccip';
import { ABI_CODER } from '../../src/utils.js';
import { EVMRequest } from '../../src/vm.js';
import { Foundry } from '@adraffy/blocksmith';
import { ethers } from 'ethers';

const config = PolygonPoSRollup.mainnetConfig;
const rollup = new PolygonPoSRollup(createProviderPair(config), config);

//rollup.provider2.on('debug', (x) => console.log(x));

const foundry = await Foundry.launch({
  fork: providerURL(config.chain1),
  infoLog: true,
});

const gateway = new Gateway(rollup);
const ccip = await serve(gateway, {
  protocol: 'raw',
  log: true,
});
const verifier = await foundry.deploy({
  file: 'PolygonPoSVerifier',
  args: [[ccip.endpoint], rollup.defaultWindow, rollup.RootChain],
});
await foundry.confirm(verifier.togglePoster(rollup.poster.address, true));

const req = new EVMRequest();
req.setTarget('0x35b4293d527964c017c072d80713CA1A3d2FD206');
req.read().addOutput();

// let prover = await EthProver.latest(rollup.provider2);
// console.log(parseInt(prover.block));
// prover = (await rollup.fetchLatestCommit()).prover;
// console.log(parseInt(prover.block));
// console.log(
//   await prover.getProofs('0x35b4293d527964c017c072d80713CA1A3d2FD206', [0n])
// );

// const latest = await rollup.fetchLatestCommitIndex();
// console.log(latest);
// const commit = await rollup.fetchCommit(latest);
// console.log(await rollup.fetchParentCommitIndex(commit));

//const commit = await rollup.fetchLatestCommit();
//console.log(JSON.stringify(rollup.JSONFromCommit(commit)));
const commit = rollup.commitFromJSON({
  index: '0x286aae00',
  l2BlockNumber: '0x3a5b207',
  l2BlockNumberStart: '0x3a5b0a6',
  l2BlockNumberEnd: '0x3a5b2a5',
  rlpEncodedBlock:
    '0xf9034ca015f575f2c61fece7c8607a4c38d0bb84ea608bfa136c28541b2a7cf7dbb9065ca01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347940000000000000000000000000000000000000000a0ea113345733ab01610001e0358ea1b1530917cc4eaac9057cdfa9416817d575ca002585a1b38e7953789ef60b3619576171976c00e91775553dcf30c74c32aa7c6a07648b619b91b9ef8692ab636a4da8db6dbc37aafd698651299371f581422b622b90100efffffdffff7fbfffeffffffffffffffffffbfdfffcfffffffffefffff7ffffffdffdfefffbbfbffffffdfffbffffffffffbffbffdffffffffffbffffef7ffffff7eff777fffeffeedefffffffbffffdfffdffefdffedfefff7ffffffffffffbfffffff7fffffffffffff9ffffdffffff7eeffffffffffffdfdffffffffffffff3ffffbfffffffbffffffffffbffffffffffffeffff6ff78ffffffffbffffffffbfff7efffffdffefe7fff5effffffffffffbfffefbbffffffebfeffffffffff7e3fffffffffef7fffffffdfffff7ffffffeffffff3fffffffffffdffbbfffff7ffefffffffffffffffdffffffffffffffdffff7ffffff6efffffffdfffdffff148403a5b2078401c633248401c62e498466d0b9eeb90149d78301030783626f7288676f312e32322e35856c696e75780000000000000000f8e680f8e3c0c180c101c0c0c104c102c106c107c108c0c109c0c10cc2020dc0c10bc110c10dc0c10cc114c115c0c0c118c119c20e16c11bc111c20e12c0c11dc0c0c11bc123c0c22420c0c126c126c127c0c11cc21b2cc12bc0c12fc0c131c129c132c134c135c12cc0c138c139c3372d1ec13bc0c130c0c0c0c0c142c23b43c22d26c2451ec23b46c20e47c148c23b49c24947c12ac24946c14dc14ec0c14dc0c53c43512e4bc0c14cc34a532cc153c0c158c159c15ac153c2570dc155c145c15fc0c133c162c15ec164c26365c166c26567c168c109c167c0c0c2535dc16bc13ec170c0c0c17374e4d845f704ae33e0af786ab72cc95c7d542f1a3bb21566fe2003367f30fe2852c9c1d5fa6f3a8df09461ffb753eb29871c327f8e357e99d827e345e19883c101a000000000000000000000000000000000000000000000000000000000000000008800000000000000008307562b',
  rlpEncodedProof:
    '0xf909ae84286aae00b90120808a41f3f7ddc4f36a10494ab68c532aa25bf7878e0d83a962f46eca2c4b4f01e473b95d47e3cbac06ad85a06f3e54cc958bc39163d4df51a7dded70bbea8749e546d19c20057809208060a4954b9e2f1fa0d3835192526f483c3d861eed91bcda201410fa67992b114aa0e3965d5214c9583c6177d18282c1337cad5ce5f9ab33a7a6fb42bad6ec28a5eeb200c8c09c68b61374cb146958dd775f43960f0a3ca5bafb5d91961e11f9d6d598cafbda7badd06c052e42354de0be11f4b60b5be82bd1b82f7f413d837b1b062d303715e768a509e1924c717ab4311bad0b2cec81264061c7e35edccaaaccde13376f5ac5a652750a671f569956fe9604939ccab001abc401eacc8b989dc1d217bfc917825e58be3a21cd6f713ebe44cded99ad868403a5b2088466d0b9f0a0ced6e55c63ab8e590a0e39870acefc63f52a098fdbec9ec742209e916806ba3da0835bc050260f7b3acd9abf141e22453bf67e6a7f11c0a8b5e5d7d46f8fe92676b902ac02f902a8018401c5bcf7bf9019cf85a94591663413423dcf7c7806930e642951e0dddf10bf842a0cabf8550b9a306922529d9991dece81a1afb5b2d237560460464667de07cfbc9a020e9c8d963c0cfa979dbaed3bdbbffbef99e9f208b68b591d5ca1286a31f6cb380f9013d940000000000000000000000000000000000001010f884a04dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63a00000000000000000000000000000000000000000000000000000000000001010a000000000000000000000000051050ec063d393217b436747617ad1c2285aeeeea0000000000000000000000000fcccd43296d9c1601a904eca9b339d94a5e5e098b8a00000000000000000000000000000000000000000000000000002671a0df018e0000000000000000000000000000000000000000000000004dbf29aa5fb941c8b000000000000000000000000000000000000000000003342fd2cfbe3ffa90464000000000000000000000000000000000000000000000004dbf0338beda403ab000000000000000000000000000000000000000000003342fd2f62fe0d991d44b90583f90580f90131a09326dd70d40b95730a4be4e8f43ed933fedd216e942119f9608ca8fde41ac561a00cc76fddad4e54111b92e153ebd8f2dbbba8b51b2f1153cfa871397fcf9172f3a06372e338b85fdc1b5485f7e50a377771cd837e5586b8628b3ea48d323d2b90f3a0d4a67515bb619b8422d6e8553c7a95c7cb2488c49ff4b26739f081b8e0b82f6ea06b6bc30843b2b0c8ed42f349fb1b966fea4eddcd6d90e529c3fd1e8b54e07526a0a325efec9f676461944bacccf3550cd2e58aea0644d34f066e09302d215be3daa07095f6131439e42afdfea9b47f05a999dd5d78b27eb4c876ca07c8c700622508a034bbeff7e0ca8b748faacf95560fe03d07307c6b24f7fc7590d8530517e922aca0edae4dc2352e4df50fe68516c9097338293c993ebb888a3acb6f72b594046c748080808080808080f851a07ea883914a8da12e50d9accf5707924efb947ca44982b341967ab5da6a26b37ba04c78eed8aaf19fa4b39c85479a5bda481c689bd6f6456fbb21210b02a117a0b8808080808080808080808080808080f8718080808080808080a07f0fc60181e2003c33fb77663b3d851926e0730d9f0d775cb0885937be71c432a0fc8675c8ec90df701088bc19b1ff1d1e5213e64a8ff1abc4a086de9819cf2e77a0a8455a6d0a32d0f0942eef2f8d7fa347bc984d50e7a10e0cfc45dec33aa6f807808080808080f8d1a04464d181871d6070fea37fd15eb67faa13817ab465a3961a3995cdb7f49ca9efa0121c59da4eeaef99bb4510f95c46c6d24da1d04f85788afeefc235598dc8814aa06520c8971b2ad41f780717613434ff3b0d0469a6e0bb8244ff06885be6a4d3cda0ddb297d80ec465409668b3f0ff2c43947179320bba029c5745a23e0da0d8da2ea0ef588f91c22c5a05ff8cb153c45ad026789e7fca927c4247ae3585bde02c880ba03bf545fb2466f16d5d519172a267e10aa74b70393d3a152bb11a1d4dfda412b18080808080808080808080f902b020b902ac02f902a8018401c5bcf7bf9019cf85a94591663413423dcf7c7806930e642951e0dddf10bf842a0cabf8550b9a306922529d9991dece81a1afb5b2d237560460464667de07cfbc9a020e9c8d963c0cfa979dbaed3bdbbffbef99e9f208b68b591d5ca1286a31f6cb380f9013d940000000000000000000000000000000000001010f884a04dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63a00000000000000000000000000000000000000000000000000000000000001010a000000000000000000000000051050ec063d393217b436747617ad1c2285aeeeea0000000000000000000000000fcccd43296d9c1601a904eca9b339d94a5e5e098b8a00000000000000000000000000000000000000000000000000002671a0df018e0000000000000000000000000000000000000000000000004dbf29aa5fb941c8b000000000000000000000000000000000000000000003342fd2cfbe3ffa90464000000000000000000000000000000000000000000000004dbf0338beda403ab000000000000000000000000000000000000000000003342fd2f62fe0d991d44830081a580',
  rootHash:
    '0x6cbddf443eedf8939f207b4d1a36eec796983bb5c401b28836644e0556621771',
});

console.log(rollup.JSONFromCommit(commit));

// console.log(commit.rootHash);

// const prover = new EthProver(rollup.provider2, '0x3a51747');

// console.log(
//   await prover.getProofs('0x35b4293d527964c017c072d80713ca1a3d2fd206', [0n])
// );
// throw 1;

const state = await commit.prover.evalRequest(req);
console.log(await state.resolveOutputs());

const proofSeq = await commit.prover.prove(state.needs);

console.log(
  await verifier.getStorageValues(
    ABI_CODER.encode(['uint256'], [commit.index]),
    req.toTuple(),
    rollup.encodeWitness(commit, proofSeq)
  )
);

ccip.http.close();
await foundry.shutdown();
